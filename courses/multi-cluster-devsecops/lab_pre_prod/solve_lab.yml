---
- name: Run solver
  hosts: bastions
  become: true
  vars_files:
    - /home/devops/materials/access_details.yml

  tasks:
##### credentials section 
    - name: Credential's List
      uri:
        url: https://{{ access_details.tower_hostname }}/api/v2/credentials/
        user: "{{ access_details.tower_admin_user }}"
        password: "{{ access_details.tower_admin_password }}"
        method: GET
        force_basic_auth: yes
        validate_certs: false
        body_format: json
        status_code: 200
      register: credential_list

    - set_fact:
        credential_names : "{{ credential_names |d([]) + [ item.id  | string + ':' + item.name ] }}"
      loop: "{{ credential_list.json.results }}"

    - name: find id of gitlab_token credentials
      set_fact:
        gitlab_token_id: "{{ item.split(':')[0] }}"
      loop: "{{ credential_names }}"
      when: '"gitlab_token" in item'

    - name: Delete credential if already exist
      uri:
        url: https://{{ access_details.tower_hostname }}/api/v2/credentials/{{ gitlab_token_id }}/
        user: "{{ access_details.tower_admin_user }}"
        password: "{{ access_details.tower_admin_password }}"
        method: DELETE
        body_format: json
        force_basic_auth: yes
        validate_certs: false
        status_code: 204
      when: gitlab_token_id | d('') | length > 0

    - name: Create gitlab token
      uri:
        url: https://{{ access_details.tower_hostname }}/api/v2/credentials/
        user: "{{ access_details.tower_admin_user }}"
        password: "{{ access_details.tower_admin_password }}"
        method: POST
        body_format: json
        force_basic_auth: yes
        validate_certs: false
        status_code: 201
        body: >-
          {
              "name": "gitlab_token",
              "description": "Gitlab Personal Access Token",
              "organization": 1,
              "credential_type": 13,
              "inputs": {
                  "token": "{{ access_details.gitlab_root_token }}"
              },
              "user": null,
              "team": null
          }

#### Re run credentials list if gitlab_token
    - name: Credential's List
      uri:
        url: https://{{ access_details.tower_hostname }}/api/v2/credentials/
        user: "{{ access_details.tower_admin_user }}"
        password: "{{ access_details.tower_admin_password }}"
        method: GET
        force_basic_auth: yes
        validate_certs: false
        body_format: json
        status_code: 200
      register: credential_list

    - set_fact:
        credential_names : "{{ credential_names |d([]) + [ item.id  | string + ':' + item.name ] }}"
      loop: "{{ credential_list.json.results }}"

    - name: find id of gitlab_token credentials
      set_fact:
        gitlab_token_id: "{{ item.split(':')[0] }}"
      loop: "{{ credential_names }}"
      when: '"gitlab_token" in item'

    - debug: var=credential_names
    - debug: var=gitlab_token_id
## Credentials section ends here 

## Job Template section starts here  
    - name: Jobtemplate list
      uri:
        url: https://{{ access_details.tower_hostname }}/api/v2/job_templates/
        user: "{{ access_details.tower_admin_user }}"
        password: "{{ access_details.tower_admin_password }}"
        method: GET
        force_basic_auth: yes
        validate_certs: false
        body_format: json
        status_code: 200
      register: jobtemplate_list

    - name: find id for Prod job template
      set_fact:
        test_job_template_id: "{{ item.id }}"
      loop: "{{ jobtemplate_list.json.results }}"
      when: '"Test" in item.name'

    - name: find id for Prod job template
      set_fact:
        prod_job_template_id: "{{ item.id }}"
      loop: "{{ jobtemplate_list.json.results }}"
      when: '"Prod" in item.name'

    - name: Jobtemplate update with webhook
      loop: "{{ jobtemplate_list.json.results }}"
      register: jt_output
      uri:
        url: https://{{ access_details.tower_hostname }}/api/v2/job_templates/{{ item.id }}/
        user: "{{ access_details.tower_admin_user }}"
        password: "{{ access_details.tower_admin_password }}"
        method: PATCH
        body_format: json
        force_basic_auth: yes
        validate_certs: false
        status_code: 200
        body: >-
          {
            "webhook_service": "gitlab",
            "webhook_credential": "{{ gitlab_token_id }}"
          }

    - name: Jobtemplate webhook key
      loop: "{{ jobtemplate_list.json.results }}"
      uri:
        url: https://{{ access_details.tower_hostname }}/api/v2/job_templates/{{ item.id }}/webhook_key/
        user: "{{ access_details.tower_admin_user }}"
        password: "{{ access_details.tower_admin_password }}"
        method: GET
        force_basic_auth: yes
        validate_certs: false
        body_format: json
        status_code: 200
      register: jt_webhook

    - set_fact:
        jobtemplate_webhooks : "{{ jobtemplate_webhooks |d([]) + [ item.json.webhook_key | string + '--' + item.url | replace('webhook_key','gitlab')  ] }}"
      loop: "{{ jt_webhook.results }}"

    - debug:
        msg: "{{ item.id }}:{{ item.name}}"
        verbosity: 2
      loop: "{{ jobtemplate_list.json.results }}"

    - debug: var=jobtemplate_webhooks
## Job Template section ends here  

### gitlab webhooks push and merge events
    - name: List gitlab  projects
      uri:
        url: http://{{ access_details.gitlab_hostname }}/api/v4/projects/
        method: GET
        headers:
          PRIVATE-TOKEN: "{{ access_details.gitlab_root_token }}"
      register: gitlab_project_list

    - name: Get gitlab project id
      set_fact:
        gitlab_project_id: '{{ item.id }}'
      loop: "{{ gitlab_project_list.json }}"
      when: 'item.name == "gitops-lab"'

    - name: Print gitlab project id for gitops-lab project
      debug:
        var: gitlab_project_id
        verbosity: 2

    - name: List gitlab  webhook
      uri:
        url: http://{{ access_details.gitlab_hostname }}/api/v4/projects/{{ gitlab_project_id }}/hooks/
        method: GET
        headers:
          PRIVATE-TOKEN: "{{ access_details.gitlab_root_token }}"
      register: gitlab_webhook_list

    - name: Delete gitlab webhook
      uri:
        url: http://{{ access_details.gitlab_hostname }}/api/v4/projects/{{ gitlab_project_id }}/hooks/{{ item.id }}
        method: DELETE
        headers:
          PRIVATE-TOKEN: "{{ access_details.gitlab_root_token }}"
        status_code: 204
      loop: "{{ gitlab_webhook_list.json }}"

    - name: Create Test webhook in gitlab
      uri:
        url: http://{{ access_details.gitlab_hostname }}/api/v4/projects/{{ gitlab_project_id }}/hooks/
        method: POST
        headers:
          PRIVATE-TOKEN: "{{ access_details.gitlab_root_token }}"
        body_format: form-urlencoded
        status_code: 201
        body:
          enable_ssl_verification: false
          push_events: true
          push_events_branch_filter: test
          url: "{{ item.split('--')[1] }}"
          token: "{{ item.split('--')[0] }}"
      loop: "{{ jobtemplate_webhooks }}"
      when: '"/" + test_job_template_id + "/" in item'

    - name: Create Prod webhook in gitlab
      uri:
        url: http://{{ access_details.gitlab_hostname }}/api/v4/projects/{{ gitlab_project_id }}/hooks/
        method: POST
        headers:
          PRIVATE-TOKEN: "{{ access_details.gitlab_root_token }}"
        body_format: form-urlencoded
        status_code: 201
        body:
          enable_ssl_verification: false
          push_events: true
          push_events_branch_filter: prod
          merge_requests_events: true
          url: "{{ item.split('--')[1] }}"
          token: "{{ item.split('--')[0] }}"
      loop: "{{ jobtemplate_webhooks }}"
      when: '"/" + prod_job_template_id + "/" in item'
    
    - name: Insert new lines in site.yml to activate push events
      lineinfile:
        path: /home/devops/materials/site.yml
        insertafter: 'EOF'
        line: '## Solver deployed at epoch {{ ansible_date_time.epoch }}'

    - name: Clone gitops-lab project
      become_user: devops
      git:
        repo:       git@{{ access_details.gitlab_hostname }}:ansible/gitops-lab.git
        dest:       /home/devops/gitops-lab
        force:      yes

    - name: Gitlab push event
      become_user: devops
      command: "{{ __command }}"
      args:
        chdir: /home/devops/gitops-lab
      loop:
        - git checkout test
        - cp /home/devops/materials/site.yml .
        - git add .
        - git commit -m "site.yml update"
        - git push
      loop_control:
        loop_var: __command

    - name: Gitlab merge event
      become_user: devops
      command: "{{ __command }}"
      args:
        chdir: /home/devops/gitops-lab
      loop:
        - git checkout prod
        - git merge test
        - git push
      loop_control:
        loop_var: __command
       
    - name: Wait for Job template to be finished
      pause:
        minutes: 5

...                                     
