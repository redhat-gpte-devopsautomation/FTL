---
- name: Grade Advanced Application Deployment with Red Hat OpenShift ILT Final Lab
  hosts: localhost
  gather_facts: false
  become: false

  # All lab tests go here
  tasks: 
  - name: Retrieve PREFIX from the Environment
    set_fact:
      prefix: "{{ lookup('env', 'PREFIX') }}"
  - name: Check PREFIX
    when: prefix | default("") | length == 0
    block:
    - name: Log error 
      import_role:
        name: ftl_run_log_grade_to_log
      vars:
        task_description_message: "Checking for PREFIX environment variable."
        grader_output_message: "FAIL: PREFIX environment variable is not set."
        success: false

    - name: Abort
      fail:
        msg: PREFIX environment variable is not set.

  - name: Log PREFIX
    when: prefix | default("") | length > 0
    import_role:
      name: ftl_run_log_grade_to_log
    vars:
      task_description_message: "Checking for PREFIX environment variable."
      grader_output_message: "PASS: PREFIX environment variable is set to {{ prefix }}."
      success: true

  - name: Delete all previous coffee-shop pipeline runs
    k8s:
      state: absent
      api_version: tekton.dev/v1beta1
      kind: PipelineRun
      namespace: "{{ prefix }}-pipeline"
      name: build-and-deploy-coffee-shop

  - name: Run pipeline for coffee-shop
    k8s:
      state: present
      definition: "{{ lookup('template',  'pipelinerun_coffeeshop.yaml.j2' ) | from_yaml }}"

  - name: Wait for Coffee Shop PipelineRun to complete successfully
    k8s_info:
      api_version: tekton.dev/v1beta1
      kind: PipelineRun
      namespace: "{{ prefix }}-pipeline"
      name: build-and-deploy-coffee-shop
    register: r_pipelinerun_coffeeshop
    retries: 60
    delay: 10
    until:
    - r_pipelinerun_coffeeshop.resources[0].status is defined
    - r_pipelinerun_coffeeshop.resources[0].status.conditions[0].status is defined
    - r_pipelinerun_coffeeshop.resources[0].status.conditions[0].reason is defined
    - r_pipelinerun_coffeeshop.resources[0].status.conditions[0].status is match("True")
    - r_pipelinerun_coffeeshop.resources[0].status.conditions[0].reason is match("Succeeded")
    - r_pipelinerun_coffeeshop.resources[0].status.pipelineResults[0].value is defined

  - name: Log Coffee Shop PipelineRun Success
    when: r_pipelinerun_coffeeshop.resources[0].status.conditions[0].status is match("True")
    import_role:
      name: ftl_run_log_grade_to_log
    vars:
      task_description_message: "Check coffee shop pipeline run."
      grader_output_message: "PASS: Coffee Shop Pipeline Run completed successfully."
      success: true

  - name: Log Coffee Shop PipelineRun Failure
    when: not r_pipelinerun_coffeeshop.resources[0].status.conditions[0].status is match("True")
    import_role:
      name: ftl_run_log_grade_to_log
    vars:
      task_description_message: "Check coffee shop pipeline run."
      grader_output_message: "FAIL: Coffee Shop Pipeline Run did not complete successfully."
      success: false

  - name: Retrieve image tag for coffee-shop from PipelineRun
    set_fact:
      coffee_shop_image_tag: "{{ r_pipelinerun_coffeeshop.resources[0].status.pipelineResults[0].value }}"

  - name: Check that coffee-shop application is using latest image tag
    include_role:
      name: grader_check_ocp_resource
    vars:
      resource_kind: Deployment
      resource_namespace: "{{ prefix }}-prod-coffeeshop"
      resource_name: coffee-shop
      resource_definition_checks:
      - error_message: "Coffee Shop Deployment is not using image {{ coffee_shop_image_tag }}"
        json_query: "spec.template.spec.containers[0].image"
        value: "{{ nexus_registry_hostname }}/{{ prefix }}-coffee-shop:{{ coffee_shop_image_tag }}"
      task_description_message: "Check if the coffee-shop deployment is using image tag {{ coffee_shop_image_tag }}"
      student_error_message: "Coffee Shop Deployment is not using latest prod image tag"

  - name: Delete all previous barista pipeline runs
    k8s:
      state: absent
      api_version: tekton.dev/v1beta1
      kind: PipelineRun
      namespace: "{{ prefix }}-pipeline"
      name: build-and-deploy-barista

  - name: Run pipeline for barista
    k8s:
      state: present
      definition: "{{ lookup('template',  'pipelinerun_barista.yaml.j2' ) | from_yaml }}"

  - name: Wait for Barista PipelineRun to complete successfully
    k8s_info:
      api_version: tekton.dev/v1beta1
      kind: PipelineRun
      namespace: "{{ prefix }}-pipeline"
      name: build-and-deploy-barista
    register: r_pipelinerun_barista
    retries: 60
    delay: 10
    until:
    - r_pipelinerun_barista.resources[0].status is defined
    - r_pipelinerun_barista.resources[0].status.conditions[0].status is defined
    - r_pipelinerun_barista.resources[0].status.conditions[0].reason is defined
    - r_pipelinerun_barista.resources[0].status.conditions[0].status is match("True")
    - r_pipelinerun_barista.resources[0].status.conditions[0].reason is match("Succeeded")
    - r_pipelinerun_barista.resources[0].status.pipelineResults[0].value is defined

  - name: Log Barista PipelineRun Success
    when: r_pipelinerun_barista.resources[0].status.conditions[0].status is match("True")
    import_role:
      name: ftl_run_log_grade_to_log
    vars:
      task_description_message: "Check barista pipeline run."
      grader_output_message: "PASS: Barista Pipeline Run completed successfully."
      success: true

  - name: Log Barista PipelineRun Failure
    when: not r_pipelinerun_barista.resources[0].status.conditions[0].status is match("True")
    import_role:
      name: ftl_run_log_grade_to_log
    vars:
      task_description_message: "Check barista pipeline run."
      grader_output_message: "FAIL: Barista Pipeline Run did not complete successfully."
      success: false

  - name: Retrieve image tag for barista from PipelineRun
    set_fact:
      barista_image_tag: "{{ r_pipelinerun_barista.resources[0].status.pipelineResults[0].value }}"

  - name: Print tag
    debug:
      msg: "Barista Image tag: {{ barista_image_tag }}"

  - name: Check that barista service is using latest image tag
    include_role:
      name: grader_check_ocp_resource
    vars:
      resource_api_version: serving.knative.dev/v1
      resource_kind: Service
      resource_namespace: "{{ prefix }}-prod-coffeeshop"
      resource_name: barista
      resource_definition_checks:
      - error_message: "Barista Service is not using image {{ barista_image_tag }}"
        json_query: "spec.template.spec.containers[0].image"
        value: "{{ nexus_registry_hostname }}/{{ prefix }}-barista:{{ barista_image_tag }}"
      task_description_message: "Check if the barista service is using image tag {{ barista_image_tag }}"
      student_error_message: "Barista Service is not using latest prod image tag"
